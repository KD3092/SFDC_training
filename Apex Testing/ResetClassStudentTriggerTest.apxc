@isTest
private class ResetClassStudentTriggerTest {
    private static final String CUSTOM_STATUS_RESET='Reset';
    private static final String CUSTOM_STATUS_CLOSE='Close';
    private static final String CLASS_NAME='10-A';
    private static final String SEX_MALE='Male';
    
    @testSetup
    private static void setup(){
        Class__c classObj= new Class__c(Name=CLASS_NAME, Max_Size__c=100);
        insert classObj;
        
        List<Student__c> studentObjList = new List<Student__c>();
        for(Integer counter=0; counter<100; counter++){
            studentObjList.add(new Student__c( Name='Student '+counter, Sex__c=SEX_MALE, Class__c=classObj.Id));
        }
        insert studentObjList; 
    }
    
    @isTest
    private static void testWithCustomStatusReset(){
        List<Class__c> classObjList=[SELECT Id, Custom_Status__c FROM Class__c WHERE Name =: CLASS_NAME];
        
        for(Class__c classObj : classObjList){           
            classObj.Custom_Status__c = CUSTOM_STATUS_RESET;
        }
        
        Test.startTest();
        update classObjList;
        Test.stopTest();
        
        for(Class__c classObj : [SELECT Id, Custom_Status__c, (SELECT Id FROM Students__r) FROM Class__c WHERE Name =: CLASS_NAME]){
            List<Student__c> allStudentObjList =classObj.Students__r;
            System.assertEquals(0, allStudentObjList.size());
        }
    }
    
    @isTest
    private static void testWithCustomStatusNotReset(){
        List<Class__c> classObjList=[SELECT Id, Custom_Status__c FROM Class__c WHERE Name =: CLASS_NAME];
        for(Class__c classObj : classObjList){
            classObj.Custom_Status__c = CUSTOM_STATUS_CLOSE;
        }
        
        Test.startTest();
        update classObjList;
        Test.stopTest();
        
        for(Class__c classObj : [SELECT Id, Custom_Status__c, (SELECT Id FROM Students__r) FROM Class__c WHERE Name =: CLASS_NAME]){
            List<Student__c> allStudentObjList =classObj.Students__r;
            System.assertEquals(100, allStudentObjList.size());
        }
    }
    
    @isTest
    private static void testWithCustomStatusAlreadyReset(){
        List<Class__c> classObjList=[SELECT Id,Custom_Status__c FROM Class__c WHERE Name =: CLASS_NAME];
        Id classId;
        for(Class__c classObj : classObjList){
            classId = classObj.Id;
            classObj.Custom_Status__c = CUSTOM_STATUS_RESET;
        }
        update classObjList;
        
        
        for(Class__c classObj : classObjList){
            classObj.Custom_Status__c = CUSTOM_STATUS_RESET;
        }
        update classObjList;
        
        List<Student__c> studentObjList= new List<Student__c>();
        for(Integer counter=0;counter<100;counter++){
            studentObjList.add(new Student__c( Name='Student '+counter, Sex__c=SEX_MALE, Class__c=classId));
        }        
        
        Test.startTest();
        insert studentObjList; 
        Test.stopTest();
        
        for(Class__c classObj : [SELECT Id, Custom_Status__c, (SELECT Id FROM Students__r) FROM Class__c WHERE Name =: CLASS_NAME]){
            List<Student__c> allStudentObjList = classObj.Students__r;
            System.assertEquals(100, allStudentObjList.size());
        }
    }
    
}