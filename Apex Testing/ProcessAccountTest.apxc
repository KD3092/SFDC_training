@isTest
private class ProcessAccountTest {
    private static final String ACCOUNT_NAME='Test Account';
    private static final String CONTACT_NAME='Test Contact';
    private static final String OPPORTUNITY_NAME='Test Opportunity';
    
    @testSetup
    private static void setup(){
        Account accountObj= new Account(Name=ACCOUNT_NAME);
        insert accountObj; 
    }
    
    @isTest
    private static void updateAccountForContactIdsAsynchTest_WithNullContactId_ShouldPopulateContactId(){
        
        List<Account> accountList= [SELECT Id FROM Account WHERE Name=:ACCOUNT_NAME];
        
        Contact contactObj= new Contact(LastName=CONTACT_NAME, AccountId=accountList[0].Id);
        insert contactObj;
        
        Test.startTest();
        ProcessAccount.updateAccountForContactIdsAsynch(contactObj.Id);
        Test.stopTest();
        
        for(Account account : [SELECT ID, Contactids__c, (SELECT ID FROM Contacts) FROM Account WHERE ID IN (SELECT AccountId FROM Contact WHERE ID =: contactObj.Id)]){
            System.assertNotEquals(null, account.contactids__c);
            System.assert(account.contactids__c.contains(contactObj.Id));
        }
    }
    
    @isTest
    private static void updateAccountForContactIdsAsynchTest_WithNotNullContactId_ShouldPopulateContactId(){
        List<Account> accountList= [SELECT Id FROM Account WHERE Name=:ACCOUNT_NAME];
        Id accountId=accountList[0].Id;
        
        List<Contact> contactObjList = new List<Contact>();
        for(Integer counter=0; counter<10; counter++){
            contactObjList.add(new Contact(LastName=CONTACT_NAME+' '+counter, AccountId=accountId));
        }
        insert contactObjList;
        
        ProcessAccount.updateAccountForContactIds(contactObjList[0].Id);
        
        Contact newContactObj = new Contact(LastName=CONTACT_NAME, AccountId=accountId);
        insert newContactObj;
        
        Test.startTest();
        ProcessAccount.updateAccountForContactIdsAsynch(newContactObj.Id);
        Test.stopTest();
        
        for(Account account : [SELECT ID, Contactids__c, (SELECT ID FROM Contacts) FROM Account WHERE ID IN (SELECT AccountId FROM Contact WHERE ID =: newContactObj.Id)]){
            System.assertNotEquals(null, account.contactids__c);
            System.assert(account.contactids__c.contains(newContactObj.Id));
        }
    }
    
}
