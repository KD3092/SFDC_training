@isTest
private class ValidateClassDeleteTriggerTest {
    private static final String CLASS_NAME='10 A';
    private static final String STUDENT_NAME='Test Student';
    private static final String SEX_FEMALE='Female';
    private static final String SEX_MALE='Male';
    
    @testSetup
    private static void setup(){
       Class__c classObj= new Class__c(Name=CLASS_NAME);
       insert classObj; 
    }
    
    @isTest
    private static void classTriggerTest_WithMoreThanOneFemaleStudent_ShouldNotAllowDelete(){
        List<Class__c> classList=[SELECT Id FROM Class__c WHERE Name=:CLASS_NAME ]; 
        
        List<Student__c> studentObjList= new List<Student__c>();
        for(Integer counter=0; counter<10; counter++){
            studentObjList.add(new Student__c(Name=STUDENT_NAME+' '+counter, Sex__c=SEX_FEMALE, Class__c=classList[0].Id));
        }
        insert studentObjList;
        
        Test.startTest();
        Database.DeleteResult result = Database.delete(classList[0],false);
        Test.stopTest();
        
        System.assert(!result.isSuccess());
        System.assertEquals('Cannot delete class with more than one Female Students.',result.getErrors()[0].getMessage());
    }
    
    @isTest
    private static void classTriggerTest_WithOneFemaleStudent_ShouldAllowDelete(){
         List<Class__c> classList=[SELECT Id FROM Class__c WHERE Name=:CLASS_NAME ]; 
        
        List<Student__c> studentObjList= new List<Student__c>();
        for(Integer counter=0; counter<10; counter++){
            studentObjList.add(new Student__c(Name=STUDENT_NAME+' '+counter, Sex__c=SEX_MALE, Class__c=classList[0].Id));
        }
        
        studentObjList.add(new Student__c(Name=STUDENT_NAME, Sex__c=SEX_FEMALE, Class__c=classList[0].Id));
        
        insert studentObjList;
        
        Test.startTest();
        Database.DeleteResult result= Database.delete(classList[0],false);
        Test.stopTest();
        
        System.assert(result.isSuccess());
        List<Class__c> classListAfterDelete=[SELECT Id FROM Class__c WHERE Name=:CLASS_NAME ];        
        System.assert(classListAfterDelete.isEmpty());
    }
    
    
    @isTest
    private static void classTriggerTest_BulkTest_ShouldAllowDelete(){
        
        List<Class__c> classObjList= new List<Class__c>();
        for(Integer counter=0; counter<100; counter++){
            classObjList.add(new Class__c(Name=CLASS_NAME+' '+counter));
        }
        insert classObjList;
        
        List<Student__c> studentObjList= new List<Student__c>();
        for(Class__c classObj : classObjList){
            for(Integer counter=0; counter<10; counter++){
                studentObjList.add(new Student__c(Name=STUDENT_NAME+' '+counter, Sex__c=SEX_FEMALE, Class__c=classObj.Id));
            }
        }
        insert studentObjList;
        
        Test.startTest();
        Database.DeleteResult[] deleteResultList= Database.delete(classObjList,false);
        Test.stopTest();
        
        for(Database.DeleteResult deleteResult : deleteResultList){
            System.assert(!deleteResult.isSuccess());
            System.assertEquals('Cannot delete class with more than one Female Students.',deleteResult.getErrors()[0].getMessage());
        }
        
    }
        
}
